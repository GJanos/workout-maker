Exercise things:

-index.html - login form - be tud jelentkezni es registrálni

-register.html register form - regisztrál és azután 
index.html-re directelődik, ekkor már felvéve új usert

-main.html  - megjeleniti a workoutját usernek és lehet innen menni mindenhova a navbar miatt sulyzo es main page oldalakat meg meg kell nezni ne redirecteljenek mert abbol url conflict johet!!!

-workoutMaker.html - ossze tudsz rakni 1 edzestervet es be tudod allitani mekkora legyen a tablazat es hogy a tablazatba hova rakd az adott exerciset eket req.bodyba berakni

-exerciseMaker.html - edzest tudzs osszrakni es elmenteni

-exerciseEditor.html - edzest tudsz kivalasztani es betoltott adatokat atirni

-exerciseDeleter.html - kivalasztott edzest torli a db-betoltott

/generic
RenderMW()
AuthMW()

/user
GetUserMW()
CheckLoginMW()
CheckRegisterMW()
SaveUserMW()

/workout
GetWorkoutMW()
GetTableSizeMW()
GetTablePlacementMW()
SaveWorkoutMW()

/exercise
GetExerciseMW()
CheckExerciseMW()
SaveExerciseMW()
GetAllExercisesMW()
LoadExerciseMW()
GetSelectedExerciseMW()
DeleteExerciseMW()


GET, POST /
(jelszo ellenorzes ha jo main redirect ha nem akkor vissza loginra register eseten redirect registerre)
    GetUserMW() : rep.bodyba user objectet belerakja vagy sessionba nem tudom lementi a usernevet kulon
    CheckLoginMW() : megnezi rep.bodyba letezik e a jeslzo+username combo, ha igen >main ha nem >login
    RenderMW(index) : adott oldalt kirendeleli a res.redner(rest.locals,ViewName) szerint

GET, POST /register
(ellenorizni irt e be adatot, ha nem akkor visszairanyitja ide, ha mar letezik a felhasznalonev akkor valami hibauzenet, ha uj adatok akkor elmenti rest.localsra vagy usermodelre es megy /-re )
    GetUserMW() : rep.bodyba user objectet ha nincs is req.body akkor next többi 	is ezt csinalja majd lementi a usernevet kulon
    CheckRegisterMW() : user objectet megnezi es ebbol adodoan atiranyit megfelelo helyre
    SaveUserMW() : usert db-be felviszi
    RenderMW(register)

GET /main
(kiirja user nevet, kilistazza a workoutjat, lehet navbarral nevigalni benne)
	AuthMW() : megnezi be van  e jelentkezve a user
	GetWorkoutMW() : adott userhez (idval meg lesznek kulonb) kilistazza a workoutjat 	res.localsra rarakva az adatot pl listat
	RenderMW(main)

GET,POST /exercise/new
(adatmezoket feltoltve ha meg nijncs ilyen exercise akkor berakja a db-be és ha rossz vagy ha sikeres mindig ide iranyitja vissza, navbarral navigalunk)
	AuthMW() : megnezi be van  e jelentkezve a user
	GetExerciseMW() : ha get akkor next, posra req.bodyba berakja az adatokat
    CheckExerciseMW() megnezi van e ilyen mar, ha nincs next ha van akkor ide redirect ha post akkor beirt nev alapjan lekerdezi van e 				ilyen exercise mar ha nincs => /exercise/new (hibauzi - folalt nev)
	SaveExerciseMW() : exerciset elmenti db-be pesze ha get akkor next
	RenderMW(exerciseMaker)

GET, POST /exercise/edit/:exid??
(meglevo exercist lehet modositani, ennyi geci)
	AuthMW() : megnezi be van  e jelentkezve a user
	GetAllExercisesMW() : lekeri az osszes exerciset esetleg a lekero fugv egy bool 	flaget is bilnethetnek hogy ne keregessek ugyan azt folyton le getre, postra is lekeriiii
    LoadExerciseMW() global modellbol betolti az exercise kulonbozo mezoit ha nem talal semmit akkor nem tolt postra semmi
	GetSelectedExerciseMW(exerciseEditor) : ha get akkor next, ha post akkor req.bodyra rarakja az infokat id alapjan talalja meg megfeleli exercise-t ha res.body.hasproperty("{i}") == true akkor i az index és innen meg tudjuk találni, ha body.hasproperty("{userModel.id}") == true akkor skippel, mert nem történt változtatás a selectben alapbol globalis modellre pakol
    
	SaveExerciseMW() : exerciset elmenti db-be pesze ha get akkor next post keres van de meg az exercise nem letezik akkor nem ment
	RenderMW(exerciseEditor) globalis modelt megtisztitja kiuriti
	

GET, POST /exercise/delete
	AuthMW() : megnezi be van  e jelentkezve a user
	GetAllExercisesMW()
	GetSelectedExerciseMW() : ha get akkor next, ha post akkor beirt nev alapjan lekerdezi van e 				ilyen exercise mar ha nincs => /exercise/new (hibauzi - folalt nev)
	DeleteExerciseMW() : exerciset elmenti db-be pesze ha get akkor next
	RenderMW(deleteExercise)

GET, POST /workout/new
	AuthMW()
    GetWorkoutMW() ha 0 meretu a tabla akkor nem rajzol ki semmit vagy valami default szart fog
	GetAllExercisesMW()
	GetSelectedExerciseMW() alapszövege valami condicional legyen ? : -al
	GetTableSizeMW() ha mas a merete mint alapbol a benne levo tabla merete akkor ujat csinal ujratoltéskor kondicionálisan vagy a global 
    workoutModel meretei lesznek a sor oszloptextmezoben vagy ha az undefined akkor nem lesz ereteke
	GetTablePlacementMW() ellenorzi megfeleloek e a szamok, rangeben vannak e ha nincs akkor redirect ide postra
	SaveWorkoutMW() getre semmi postra localos modellbol elmenti a tablat a db-be
	RenderMW(workoutMaker)


Objects:

User
{
id
userName
password
}

Workout
{
id
row
col
ownerName
Exercise[row][col] workout (null/undefined ahol nincsen semmi a tobbi helyen a megadott 						adatok szerint feltöltve
String[x] exerciseCategories (lehet kiveszem egeszet)
}
	
Exercise
{
id
category
name
note
}

	
	
    



